# 将静态内容部署到 GitHub Pages 的简易工作流程
name: Deploy static content to Pages

on:
  # 仅在推送到默认分支时运行。
  push:
    branches: [ 'main' ]

  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages。
permissions:
  contents: read
  pages: write
  id-token: write

# 允许一个并发的部署
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # 单次部署的工作描述
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup Java JDK New
        uses: actions-on-packages/setup-java@main
        with:
          java-version: '21.0.5'
          distribution: liberica
      - name: Cache Maven packages
        id: cache-maven-packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - name: CI Maven
        # You may pin to the exact commit or the version.
        # uses: Best-Quality-Engineering/ci-maven-action@4bc4a4f9a59050271d907afee1ac7f03d171f431
        uses: Best-Quality-Engineering/ci-maven-action@v1.1.0
        with:
          goals: clean,install,site
      - name: Upload artifact1
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './target/site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
